name: Build, Test and Release Avalonia App

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  code_check:
    name: Lint and Analyze Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "9.0.x"

      - name: Restore dependencies
        run: dotnet restore

      - name: Run dotnet format (syntax and style check)
        run: |
          dotnet format AvaloniaTest.csproj || echo "Code format check failed, but continuing."

      - name: Run static analysis
        run: |
          dotnet build -warnaserror /p:RunAnalyzers=true || true

      - name: Run unit tests
        if: ${{ hashFiles('**/*Tests.csproj') != '' }}
        run: dotnet test --configuration Release --no-build --verbosity normal

  # Джоба для Windows
  build_windows:
    name: Build, Test and Package for Windows
    needs: code_check
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "9.0.x"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the app
        run: dotnet build --configuration Release --no-restore

      - name: Publish for Windows
        run: |
          dotnet publish AvaloniaTest.csproj -c Release -r win-x64 --self-contained -p:PublishSingleFile=true -o ./publish/win
          7z a artifacts/MyApp-windows.zip ./publish/win/*

      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-windows
          path: artifacts/*

  # Джоба для Linux
  build_linux:
    name: Build, Test and Package for Linux
    needs: code_check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "9.0.x"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the app
        run: dotnet build --configuration Release --no-restore

      - name: Publish for Linux
        run: |
          dotnet publish AvaloniaTest.csproj -c Release -r linux-x64 --self-contained -p:PublishSingleFile=true -o ./publish/linux
          mkdir -p artifacts 
          tar -czvf artifacts/MyApp-linux.tar.gz -C publish/linux .

      - name: Upload Linux Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-linux
          path: artifacts/*

   #  Джоба для релиза (создание релиза в GitHub)
  release:
    name: Create GitHub Release
    needs: [build_windows, build_linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download Windows Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-windows
          path: artifacts

      - name: Download Linux Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-linux
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
